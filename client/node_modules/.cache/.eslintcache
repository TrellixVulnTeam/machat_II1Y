[{"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/index.js":"1","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/App.js":"2","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/auth/Register.js":"3","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/auth/Login.js":"4","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Home.js":"5","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/context/authContext.js":"6","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/layout/Navbar.js":"7","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/DynamicRoutes.js":"8","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Users.js":"9","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Messages.js":"10"},{"size":147,"mtime":1621114898535,"results":"11","hashOfConfig":"12"},{"size":1555,"mtime":1621112086815,"results":"13","hashOfConfig":"12"},{"size":3310,"mtime":1621159835664,"results":"14","hashOfConfig":"12"},{"size":2404,"mtime":1621160041898,"results":"15","hashOfConfig":"12"},{"size":1512,"mtime":1621162653565,"results":"16","hashOfConfig":"12"},{"size":1310,"mtime":1621159931839,"results":"17","hashOfConfig":"12"},{"size":660,"mtime":1621107865080,"results":"18","hashOfConfig":"12"},{"size":438,"mtime":1621110512579,"results":"19","hashOfConfig":"12"},{"size":1489,"mtime":1621162303727,"results":"20","hashOfConfig":"12"},{"size":824,"mtime":1621162649392,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hbb8e0",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/index.js",[],"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/App.js",["48"],"import './App.scss';\nimport { Container } from 'react-bootstrap';\nimport { Register } from './components/auth/Register';\nimport { Login } from './components/auth/Login';\nimport {\n\tApolloClient,\n\tInMemoryCache,\n\tcreateHttpLink,\n\tApolloProvider,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport { AuthProvider } from './context/authContext';\nimport DynamicRoutes from './DynamicRoutes';\n\nconst httpLink = createHttpLink({\n\turi: 'http://localhost:4000',\n});\n\nconst authLink = setContext((_, { headers }) => {\n\t// get the authentication token from local storage if it exists\n\tconst token = localStorage.getItem('token');\n\t// return the headers to the context so httpLink can read them\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : '',\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<AuthProvider>\n\t\t\t\t<Router>\n\t\t\t\t\t<Container className='pt-5'>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<DynamicRoutes\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/register'\n\t\t\t\t\t\t\t\tcomponent={Register}\n\t\t\t\t\t\t\t\tguest\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<DynamicRoutes exact path='/login' component={Login} guest />\n\t\t\t\t\t\t\t<DynamicRoutes exact path='/' component={Home} authenticated />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Container>\n\t\t\t\t</Router>\n\t\t\t</AuthProvider>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/auth/Register.js",[],"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/auth/Login.js",["49"],"import React, { Fragment, useState } from 'react';\nimport { Row, Col, Form, Button, Spinner } from 'react-bootstrap';\nimport { useLazyQuery, gql } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { useAuthDispatch } from '../../context/authContext';\n\nconst LOGIN_USER = gql`\n\tquery login($username: String!, $password: String!) {\n\t\tlogin(username: $username, password: $password) {\n\t\t\t_id\n\t\t\tusername\n\t\t\temail\n\t\t\tcreatedAt\n\t\t\ttoken\n\t\t}\n\t}\n`;\nexport const Login = props => {\n\tconst [values, setValues] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t});\n\tconst [errors, setErrors] = useState({});\n\tconst dispatch = useAuthDispatch();\n\tconst [loginUser, { loading }] = useLazyQuery(LOGIN_USER, {\n\t\tonError: err => setErrors(err.graphQLErrors[0].extensions.errors),\n\t\tonCompleted: data => {\n\t\t\tdispatch({ type: 'LOGIN', payload: data.login });\n\t\t\tprops.history.push('/');\n\t\t},\n\t});\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tloginUser({ variables: values });\n\t};\n\n\tconst { username, password } = values;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Row\n\t\t\t\tclassName='authform bg-white py-5 justify-content-center'\n\t\t\t\tstyle={{ opacity: '70%' }}\n\t\t\t>\n\t\t\t\t<Col sm={8} md={6} lg={4}>\n\t\t\t\t\t<h1 className='text-center'>Login</h1>\n\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className={errors.username && 'text-danger'}>\n\t\t\t\t\t\t\t\t{errors.username ?? 'Username'}\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\tclassName={errors.username && 'is-invalid'}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tsetValues({ ...values, username: e.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className={errors.password && 'text-danger'}>\n\t\t\t\t\t\t\t\t{errors.password ?? 'Password'}\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tclassName={errors.password && 'is-invalid'}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tsetValues({ ...values, password: e.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<div className='text-center'>\n\t\t\t\t\t\t\t<Button variant='success' type='submit' disabled={loading}>\n\t\t\t\t\t\t\t\t{loading ? 'Loading...' : 'Login'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\tDon't have an account ? <Link to='/register'>Register</Link>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Fragment>\n\t);\n};\n","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Home.js",["50"],"import React, { useState, Fragment } from 'react';\nimport { Row, Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useAuthDispatch } from '../../context/authContext';\nimport Users from './Users';\nimport Messages from './Messages';\n\nconst Home = ({ history }) => {\n\tconst dispatch = useAuthDispatch();\n\tconst [selectedUser, setSelectedUser] = useState(null);\n\n\tconst logout = () => {\n\t\tdispatch({ type: 'LOGOUT' });\n\t\thistory.push('/login');\n\t};\n\n\treturn (\n\t\t// <Row className='bg-white justify-content-around'>\n\t\t// \t<Link to='/login'>\n\t\t// \t\t<Button variant='link'>Login</Button>\n\t\t// \t</Link>\n\t\t// \t<Link to='/register'>\n\t\t// \t\t<Button variant='link'>Register</Button>\n\t\t// \t</Link>\n\t\t// \t<Button variant='link' onClick={logout}>\n\t\t// \t\tLogout\n\t\t// \t</Button>\n\t\t// </Row>\n\t\t<Fragment>\n\t\t\t<Navbar bg='light' expand='lg' className='mb-3'>\n\t\t\t\t<Navbar.Brand href='#home'>MaChat</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\n\n\t\t\t\t<Navbar.Collapse id='basic-navbar-nav' className='justify-content-end'>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<Nav.Link onClick={logout}>Logout</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t{/* <Form inline>\n\t\t\t\t\t<FormControl type='text' placeholder='Search' className='mr-sm-2' />\n\t\t\t\t\t<Button variant='outline-success'>Search</Button>\n\t\t\t\t</Form> */}\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t\t<Row className=' m-0'>\n\t\t\t\t<Users setSelectedUser={setSelectedUser} />\n\t\t\t\t<Messages selectedUser={selectedUser} />\n\t\t\t</Row>\n\t\t</Fragment>\n\t);\n};\n\nexport default Home;\n","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/context/authContext.js",[],"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/layout/Navbar.js",[],["51","52"],"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/DynamicRoutes.js",[],"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Users.js",["53"],"import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Col, Spinner, Alert, Image } from 'react-bootstrap';\n\nconst GET_USERS = gql`\n\tquery getUsers {\n\t\tgetUsers {\n\t\t\tusername\n\t\t\tcreatedAt\n\t\t\timageUrl\n\t\t\tlatestMessage {\n\t\t\t\tfrom\n\t\t\t\tto\n\t\t\t\tcontent\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Users = ({ setSelectedUser }) => {\n\tconst { loading, data, error } = useQuery(GET_USERS);\n\tlet usersMarkup;\n\tif (!data && loading) {\n\t\tusersMarkup = <Spinner animation='grow' />;\n\t} else if (data.getUsers.length === 0) {\n\t\tusersMarkup = (\n\t\t\t<Alert variant='info'>No users have joined this platform yet</Alert>\n\t\t);\n\t} else if (data.getUsers.length > 0) {\n\t\tusersMarkup = data.getUsers.map(user => (\n\t\t\t<div\n\t\t\t\tclassName='d-flex p-3'\n\t\t\t\tkey={user._id}\n\t\t\t\tonClick={() => setSelectedUser(user.username)}\n\t\t\t>\n\t\t\t\t<Image\n\t\t\t\t\tsrc='https://source.unsplash.com/user/erondu/1600x900'\n\t\t\t\t\troundedCircle\n\t\t\t\t\tclassName='mr-2'\n\t\t\t\t\tstyle={{ width: 50, height: 50, objectFit: 'cover' }}\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t<p className='text-success'>{user.username}</p>\n\t\t\t\t\t<p className='font-weight-light'>\n\t\t\t\t\t\t{user.latestMessage\n\t\t\t\t\t\t\t? user.latestMessage.content\n\t\t\t\t\t\t\t: 'You are connected'}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t));\n\t}\n\treturn (\n\t\t<Col\n\t\t\tclassName=' p-0'\n\t\t\txs={4}\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: ' #8EC5FC',\n\t\t\t\topacity: '85%',\n\n\t\t\t\tbackgroundImage:\n\t\t\t\t\t'linear-gradient(62deg, #8EC5FC 0%, #ffffff 49%, #E0C3FC 98%)',\n\t\t\t}}\n\t\t>\n\t\t\t{usersMarkup}\n\t\t</Col>\n\t);\n};\n\nexport default Users;\n","/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Messages.js",["54","55"],"import React, { useEffect } from 'react';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { Col } from 'react-bootstrap';\n\nconst GET_MESSAGES = gql`\n\tquery getMessages($from: String!) {\n\t\tgetMessages(from: $from) {\n\t\t\t_id\n\t\t\tcontent\n\t\t\tcreatedAt\n\t\t\tto\n\t\t\tfrom\n\t\t}\n\t}\n`;\nconst Messages = ({ selectedUser }) => {\n\tuseEffect(() => {\n\t\tif (selectedUser) {\n\t\t\tgetMessages({ variables: { from: selectedUser } });\n\t\t}\n\t}, [selectedUser]);\n\n\tconst [getMessages, { loading: messagesLoading, data: messagesData }] =\n\t\tuseLazyQuery(GET_MESSAGES);\n\n\treturn (\n\t\t<Col xs={8}>\n\t\t\t{messagesData && messagesData.getMessages.length > 0 ? (\n\t\t\t\tmessagesData.getMessages.map(message => (\n\t\t\t\t\t<p key={message._id}>{message.content}</p>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<p>You are now connected</p>\n\t\t\t)}\n\t\t</Col>\n\t);\n};\n\nexport default Messages;\n",{"ruleId":"56","severity":1,"message":"57","line":12,"column":35,"nodeType":"58","messageId":"59","endLine":12,"endColumn":40},{"ruleId":"56","severity":1,"message":"60","line":2,"column":34,"nodeType":"58","messageId":"59","endLine":2,"endColumn":41},{"ruleId":"56","severity":1,"message":"61","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":14},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"56","severity":1,"message":"66","line":21,"column":25,"nodeType":"58","messageId":"59","endLine":21,"endColumn":30},{"ruleId":"67","severity":1,"message":"68","line":21,"column":5,"nodeType":"69","endLine":21,"endColumn":19,"suggestions":"70"},{"ruleId":"56","severity":1,"message":"71","line":23,"column":33,"nodeType":"58","messageId":"59","endLine":23,"endColumn":48},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["74"],"'messagesLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [getMessages, selectedUser]",{"range":"77","text":"78"},[426,440],"[getMessages, selectedUser]"]