{"ast":null,"code":"var _jsxFileName = \"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Message.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useAuthState } from '../../context/authContext';\nimport moment from 'moment';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { Button, OverlayTrigger, Popover, Tooltip } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reactions = ['❤️', '😂', '😭', '😒', '👌', '😘', '💕', '😁', '🙈', '😡', '🥶'];\nconst REACT_TO_MESSAGE = gql`\n\tmutation reactToMessage($_id: String!, $content: String!) {\n\t\treactToMessage(_id: $_id, content: $content) {\n\t\t\t_id\n\t\t}\n\t}\n`;\n\nconst Message = ({\n  message\n}) => {\n  _s();\n\n  const {\n    user\n  } = useAuthState();\n  const sent = message.from === user.username;\n  const received = !sent;\n  const [showPopover, setShowPopover] = useState(false);\n  const [reactToMessage] = useMutation(REACT_TO_MESSAGE, {\n    onCompleted: data => {\n      console.log(data);\n    },\n    onError: err => console.log(err)\n  });\n\n  const react = reaction => {\n    console.log(`Reacting ${reaction} to message ${message._id}`);\n  };\n\n  const reactButton = /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"top\",\n    show: showPopover,\n    onToggle: setShowPopover,\n    transition: false,\n    overlay: /*#__PURE__*/_jsxDEV(Popover, {\n      className: \"rounded-pill\",\n      children: /*#__PURE__*/_jsxDEV(Popover.Content, {\n        className: \"d-flex px-0 py-1 align-items-center react-button-popover\",\n        children: reactions.map(reaction => /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          className: \"react-icon-button\",\n          onClick: () => react(reaction),\n          children: reaction\n        }, reaction, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"link\",\n      className: \"px-2\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-smile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames('d-flex my-3', {\n      'ml-auto': sent,\n      'mr-auto': received\n    }),\n    children: [sent && reactButton, /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      placement: sent ? 'right' : 'left',\n      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: moment(message.createdAt).format('MMMM Do YYYY, h:mm:ss a')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames('py-2 px-3 rounded-pill ', {\n          'bg-primary': sent,\n          receiver: received\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classNames({\n            'text-white': sent\n          }),\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), received && reactButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Message, \"B7rjAH51EgRL50wbNDbfBBrm4vE=\", false, function () {\n  return [useAuthState, useMutation];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Message.js"],"names":["React","useState","classNames","useAuthState","moment","useMutation","useSubscription","Button","OverlayTrigger","Popover","Tooltip","reactions","REACT_TO_MESSAGE","gql","Message","message","user","sent","from","username","received","showPopover","setShowPopover","reactToMessage","onCompleted","data","console","log","onError","err","react","reaction","_id","reactButton","map","createdAt","format","receiver","content"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useAuthState } from '../../context/authContext';\nimport moment from 'moment';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { Button, OverlayTrigger, Popover, Tooltip } from 'react-bootstrap';\n\nconst reactions = [\n\t'❤️',\n\t'😂',\n\t'😭',\n\t'😒',\n\t'👌',\n\t'😘',\n\t'💕',\n\t'😁',\n\t'🙈',\n\t'😡',\n\t'🥶',\n];\nconst REACT_TO_MESSAGE = gql`\n\tmutation reactToMessage($_id: String!, $content: String!) {\n\t\treactToMessage(_id: $_id, content: $content) {\n\t\t\t_id\n\t\t}\n\t}\n`;\nconst Message = ({ message }) => {\n\tconst { user } = useAuthState();\n\tconst sent = message.from === user.username;\n\tconst received = !sent;\n\tconst [showPopover, setShowPopover] = useState(false);\n\n\tconst [reactToMessage] = useMutation(REACT_TO_MESSAGE, {\n\t\tonCompleted: data => {\n\t\t\tconsole.log(data);\n\t\t},\n\t\tonError: err => console.log(err),\n\t});\n\n\tconst react = reaction => {\n\t\tconsole.log(`Reacting ${reaction} to message ${message._id}`);\n\t};\n\n\tconst reactButton = (\n\t\t<OverlayTrigger\n\t\t\ttrigger='click'\n\t\t\tplacement='top'\n\t\t\tshow={showPopover}\n\t\t\tonToggle={setShowPopover}\n\t\t\ttransition={false}\n\t\t\toverlay={\n\t\t\t\t<Popover className='rounded-pill'>\n\t\t\t\t\t<Popover.Content className='d-flex px-0 py-1 align-items-center react-button-popover'>\n\t\t\t\t\t\t{reactions.map(reaction => (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='link'\n\t\t\t\t\t\t\t\tclassName='react-icon-button'\n\t\t\t\t\t\t\t\tkey={reaction}\n\t\t\t\t\t\t\t\tonClick={() => react(reaction)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{reaction}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Popover.Content>\n\t\t\t\t</Popover>\n\t\t\t}\n\t\t>\n\t\t\t<Button variant='link' className='px-2'>\n\t\t\t\t<i className='far fa-smile' />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames('d-flex my-3', {\n\t\t\t\t'ml-auto': sent,\n\t\t\t\t'mr-auto': received,\n\t\t\t})}\n\t\t>\n\t\t\t{sent && reactButton}\n\t\t\t<OverlayTrigger\n\t\t\t\tplacement={sent ? 'right' : 'left'}\n\t\t\t\toverlay={\n\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t{moment(message.createdAt).format('MMMM Do YYYY, h:mm:ss a')}\n\t\t\t\t\t</Tooltip>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames('py-2 px-3 rounded-pill ', {\n\t\t\t\t\t\t'bg-primary': sent,\n\t\t\t\t\t\treceiver: received,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<p className={classNames({ 'text-white': sent })}>\n\t\t\t\t\t\t{message.content}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</OverlayTrigger>\n\t\t\t{received && reactButton}\n\t\t</div>\n\t);\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}