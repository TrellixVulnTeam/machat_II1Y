{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import { gql, useLazyQuery } from '@apollo/client';\n// import { Col } from 'react-bootstrap';\n// const GET_MESSAGES = gql`\n// \tquery getMessages($from: String!) {\n// \t\tgetMessages(from: $from) {\n// \t\t\t_id\n// \t\t\tcontent\n// \t\t\tcreatedAt\n// \t\t\tto\n// \t\t\tfrom\n// \t\t}\n// \t}\n// `;\n// const Messages = ({ selectedUser }) => {\n// \tuseEffect(() => {\n// \t\tif (selectedUser) {\n// \t\t\tgetMessages({ variables: { from: selectedUser } });\n// \t\t}\n// \t}, [selectedUser]);\n// \tconst [getMessages, { loading: messagesLoading, data: messagesData }] =\n// \t\tuseLazyQuery(GET_MESSAGES);\n// \treturn (\n// \t\t<Col xs={8}>\n// \t\t\t{messagesData && messagesData.getMessages.length > 0 ? (\n// \t\t\t\tmessagesData.getMessages.map(message => (\n// \t\t\t\t\t<p key={message._id}>{message.content}</p>\n// \t\t\t\t))\n// \t\t\t) : (\n// \t\t\t\t<p>You are now connected</p>\n// \t\t\t)}\n// \t\t</Col>\n// \t);\n// };\n// export default Messages;","map":{"version":3,"sources":["/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Messages.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect } from 'react';\n// import { gql, useLazyQuery } from '@apollo/client';\n// import { Col } from 'react-bootstrap';\n\n// const GET_MESSAGES = gql`\n// \tquery getMessages($from: String!) {\n// \t\tgetMessages(from: $from) {\n// \t\t\t_id\n// \t\t\tcontent\n// \t\t\tcreatedAt\n// \t\t\tto\n// \t\t\tfrom\n// \t\t}\n// \t}\n// `;\n// const Messages = ({ selectedUser }) => {\n// \tuseEffect(() => {\n// \t\tif (selectedUser) {\n// \t\t\tgetMessages({ variables: { from: selectedUser } });\n// \t\t}\n// \t}, [selectedUser]);\n\n// \tconst [getMessages, { loading: messagesLoading, data: messagesData }] =\n// \t\tuseLazyQuery(GET_MESSAGES);\n\n// \treturn (\n// \t\t<Col xs={8}>\n// \t\t\t{messagesData && messagesData.getMessages.length > 0 ? (\n// \t\t\t\tmessagesData.getMessages.map(message => (\n// \t\t\t\t\t<p key={message._id}>{message.content}</p>\n// \t\t\t\t))\n// \t\t\t) : (\n// \t\t\t\t<p>You are now connected</p>\n// \t\t\t)}\n// \t\t</Col>\n// \t);\n// };\n\n// export default Messages;\n"]},"metadata":{},"sourceType":"module"}