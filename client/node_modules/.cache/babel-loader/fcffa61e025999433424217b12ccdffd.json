{"ast":null,"code":"var _jsxFileName = \"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Users.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Col, Spinner, Alert, Image } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { useMessageDispatch, useMessageState } from '../../context/messageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USERS = gql`\n\tquery getUsers {\n\t\tgetUsers {\n\t\t\tusername\n\t\t\tcreatedAt\n\t\t\timageUrl\n\t\t\tlatestMessage {\n\t\t\t\t_id\n\t\t\t\tfrom\n\t\t\t\tto\n\t\t\t\tcontent\n\t\t\t\tcreatedAt\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Users = () => {\n  _s();\n\n  var _users$find;\n\n  const dispatch = useMessageDispatch();\n  const {\n    users\n  } = useMessageState();\n  const selectedUser = users === null || users === void 0 ? void 0 : (_users$find = users.find(u => u.selected === true)) === null || _users$find === void 0 ? void 0 : _users$find.username;\n  const {\n    loading\n  } = useQuery(GET_USERS, {\n    onCompleted: data => dispatch({\n      type: 'SET_USERS',\n      payload: data.getUsers\n    }),\n    onError: err => console.log(err)\n  });\n  let usersMarkup;\n\n  if (!users && loading) {\n    usersMarkup = /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  } else if (users && users.length === 0) {\n    usersMarkup = /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: \"No users have joined this platform yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  } else if (users && users.length > 0) {\n    usersMarkup = users.map(user => {\n      const selected = selectedUser === user.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"button\",\n        className: classNames('user-div d-flex justify-content-center p-3', {\n          'bg-white': selected\n        }),\n        onClick: () => dispatch({\n          type: 'SET_SELECTED_USER',\n          payload: user.username\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://source.unsplash.com/user/erondu/1600x900\",\n          className: \"user-image \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-none d-md-block ml-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-success\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-weight-light\",\n            children: user.latestMessage ? user.latestMessage.content : 'You are connected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \" p-0\",\n    xs: 2,\n    md: 4,\n    style: {\n      backgroundColor: '#F2F3F4'\n    },\n    children: usersMarkup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Users, \"QjGNfuk9PL/qnzT2C0s+W2VrTo0=\", false, function () {\n  return [useMessageDispatch, useMessageState, useQuery];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Users.js"],"names":["React","gql","useQuery","Col","Spinner","Alert","Image","classNames","useMessageDispatch","useMessageState","GET_USERS","Users","dispatch","users","selectedUser","find","u","selected","username","loading","onCompleted","data","type","payload","getUsers","onError","err","console","log","usersMarkup","length","map","user","latestMessage","content","_id","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Col, Spinner, Alert, Image } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport {\n\tuseMessageDispatch,\n\tuseMessageState,\n} from '../../context/messageContext';\n\nconst GET_USERS = gql`\n\tquery getUsers {\n\t\tgetUsers {\n\t\t\tusername\n\t\t\tcreatedAt\n\t\t\timageUrl\n\t\t\tlatestMessage {\n\t\t\t\t_id\n\t\t\t\tfrom\n\t\t\t\tto\n\t\t\t\tcontent\n\t\t\t\tcreatedAt\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Users = () => {\n\tconst dispatch = useMessageDispatch();\n\tconst { users } = useMessageState();\n\tconst selectedUser = users?.find(u => u.selected === true)?.username;\n\n\tconst { loading } = useQuery(GET_USERS, {\n\t\tonCompleted: data =>\n\t\t\tdispatch({ type: 'SET_USERS', payload: data.getUsers }),\n\t\tonError: err => console.log(err),\n\t});\n\n\tlet usersMarkup;\n\tif (!users && loading) {\n\t\tusersMarkup = <Spinner animation='grow' />;\n\t} else if (users && users.length === 0) {\n\t\tusersMarkup = (\n\t\t\t<Alert variant='info'>No users have joined this platform yet</Alert>\n\t\t);\n\t} else if (users && users.length > 0) {\n\t\tusersMarkup = users.map(user => {\n\t\t\tconst selected = selectedUser === user.username;\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\trole='button'\n\t\t\t\t\tclassName={classNames('user-div d-flex justify-content-center p-3', {\n\t\t\t\t\t\t'bg-white': selected,\n\t\t\t\t\t})}\n\t\t\t\t\tkey={user._id}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tdispatch({ type: 'SET_SELECTED_USER', payload: user.username })\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsrc='https://source.unsplash.com/user/erondu/1600x900'\n\t\t\t\t\t\tclassName='user-image '\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='d-none d-md-block ml-2'>\n\t\t\t\t\t\t<p className='text-success'>{user.username}</p>\n\t\t\t\t\t\t<p className='font-weight-light'>\n\t\t\t\t\t\t\t{user.latestMessage\n\t\t\t\t\t\t\t\t? user.latestMessage.content\n\t\t\t\t\t\t\t\t: 'You are connected'}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<Col className=' p-0' xs={2} md={4} style={{ backgroundColor: '#F2F3F4' }}>\n\t\t\t{usersMarkup}\n\t\t</Col>\n\t);\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}