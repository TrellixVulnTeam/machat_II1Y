{"ast":null,"code":"var _jsxFileName = \"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Users.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Col, Spinner, Alert, Image } from 'react-bootstrap';\nimport { useMessageDispatch, useMessageState } from '../../context/messageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USERS = gql`\n\tquery getUsers {\n\t\tgetUsers {\n\t\t\tusername\n\t\t\tcreatedAt\n\t\t\timageUrl\n\t\t\tlatestMessage {\n\t\t\t\tfrom\n\t\t\t\tto\n\t\t\t\tcontent\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Users = ({\n  setSelectedUser\n}) => {\n  _s();\n\n  const dispatch = useMessageDispatch();\n  const {\n    users\n  } = useMessageState();\n  const {\n    loading\n  } = useQuery(GET_USERS, {\n    onCompleted: data => dispatch({\n      type: 'SET_USERS',\n      payload: data.getUsers\n    }),\n    onError: err => console.log(err)\n  }); // let usersMarkup;\n  // if (!users && loading) {\n  // \tusersMarkup = <Spinner animation='grow' />;\n  // } else if (users.length === 0) {\n  // \tusersMarkup = (\n  // \t\t<Alert variant='info'>No users have joined this platform yet</Alert>\n  // \t);\n  // } else if (users.length > 0) {\n  // \tusersMarkup = users.map(user => (\n  // \t\t<div\n  // \t\t\tclassName='d-flex p-3'\n  // \t\t\tkey={user._id}\n  // \t\t\tonClick={() => setSelectedUser(user.username)}\n  // \t\t>\n  // \t\t\t<Image\n  // \t\t\t\tsrc='https://source.unsplash.com/user/erondu/1600x900'\n  // \t\t\t\troundedCircle\n  // \t\t\t\tclassName='mr-2'\n  // \t\t\t\tstyle={{ width: 50, height: 50, objectFit: 'cover' }}\n  // \t\t\t/>\n  // \t\t\t<div>\n  // \t\t\t\t<p className='text-success'>{user.username}</p>\n  // \t\t\t\t<p className='font-weight-light'>\n  // \t\t\t\t\t{user.latestMessage\n  // \t\t\t\t\t\t? user.latestMessage.content\n  // \t\t\t\t\t\t: 'You are connected'}\n  // \t\t\t\t</p>\n  // \t\t\t</div>\n  // \t\t</div>\n  // \t));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \" p-0\",\n    xs: 4,\n    style: {\n      backgroundColor: ' #8EC5FC',\n      opacity: '85%',\n      backgroundImage: 'linear-gradient(62deg, #8EC5FC 0%, #ffffff 49%, #E0C3FC 98%)'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Users, \"QjGNfuk9PL/qnzT2C0s+W2VrTo0=\", false, function () {\n  return [useMessageDispatch, useMessageState, useQuery];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/pages/Users.js"],"names":["React","gql","useQuery","Col","Spinner","Alert","Image","useMessageDispatch","useMessageState","GET_USERS","Users","setSelectedUser","dispatch","users","loading","onCompleted","data","type","payload","getUsers","onError","err","console","log","backgroundColor","opacity","backgroundImage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,KAA9B,QAA2C,iBAA3C;AACA,SACCC,kBADD,EAECC,eAFD,QAGO,8BAHP;;AAKA,MAAMC,SAAS,GAAGR,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,MAAMS,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAAA;;AACtC,QAAMC,QAAQ,GAAGL,kBAAkB,EAAnC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYL,eAAe,EAAjC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcZ,QAAQ,CAACO,SAAD,EAAY;AACvCM,IAAAA,WAAW,EAAEC,IAAI,IAChBJ,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEF,IAAI,CAACG;AAAnC,KAAD,CAF8B;AAGvCC,IAAAA,OAAO,EAAEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAHuB,GAAZ,CAA5B,CAHsC,CAStC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACC,QAAC,GAAD;AACC,IAAA,SAAS,EAAC,MADX;AAEC,IAAA,EAAE,EAAE,CAFL;AAGC,IAAA,KAAK,EAAE;AACNG,MAAAA,eAAe,EAAE,UADX;AAENC,MAAAA,OAAO,EAAE,KAFH;AAINC,MAAAA,eAAe,EACd;AALK;AAHR;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAvDD;;GAAMhB,K;UACYH,kB,EACCC,e,EACEN,Q;;;KAHfQ,K;AAyDN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Col, Spinner, Alert, Image } from 'react-bootstrap';\nimport {\n\tuseMessageDispatch,\n\tuseMessageState,\n} from '../../context/messageContext';\n\nconst GET_USERS = gql`\n\tquery getUsers {\n\t\tgetUsers {\n\t\t\tusername\n\t\t\tcreatedAt\n\t\t\timageUrl\n\t\t\tlatestMessage {\n\t\t\t\tfrom\n\t\t\t\tto\n\t\t\t\tcontent\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Users = ({ setSelectedUser }) => {\n\tconst dispatch = useMessageDispatch();\n\tconst { users } = useMessageState();\n\tconst { loading } = useQuery(GET_USERS, {\n\t\tonCompleted: data =>\n\t\t\tdispatch({ type: 'SET_USERS', payload: data.getUsers }),\n\t\tonError: err => console.log(err),\n\t});\n\n\t// let usersMarkup;\n\t// if (!users && loading) {\n\t// \tusersMarkup = <Spinner animation='grow' />;\n\t// } else if (users.length === 0) {\n\t// \tusersMarkup = (\n\t// \t\t<Alert variant='info'>No users have joined this platform yet</Alert>\n\t// \t);\n\t// } else if (users.length > 0) {\n\t// \tusersMarkup = users.map(user => (\n\t// \t\t<div\n\t// \t\t\tclassName='d-flex p-3'\n\t// \t\t\tkey={user._id}\n\t// \t\t\tonClick={() => setSelectedUser(user.username)}\n\t// \t\t>\n\t// \t\t\t<Image\n\t// \t\t\t\tsrc='https://source.unsplash.com/user/erondu/1600x900'\n\t// \t\t\t\troundedCircle\n\t// \t\t\t\tclassName='mr-2'\n\t// \t\t\t\tstyle={{ width: 50, height: 50, objectFit: 'cover' }}\n\t// \t\t\t/>\n\t// \t\t\t<div>\n\t// \t\t\t\t<p className='text-success'>{user.username}</p>\n\t// \t\t\t\t<p className='font-weight-light'>\n\t// \t\t\t\t\t{user.latestMessage\n\t// \t\t\t\t\t\t? user.latestMessage.content\n\t// \t\t\t\t\t\t: 'You are connected'}\n\t// \t\t\t\t</p>\n\t// \t\t\t</div>\n\t// \t\t</div>\n\t// \t));\n\t// }\n\treturn (\n\t\t<Col\n\t\t\tclassName=' p-0'\n\t\t\txs={4}\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: ' #8EC5FC',\n\t\t\t\topacity: '85%',\n\n\t\t\t\tbackgroundImage:\n\t\t\t\t\t'linear-gradient(62deg, #8EC5FC 0%, #ffffff 49%, #E0C3FC 98%)',\n\t\t\t}}\n\t\t>\n\t\t\t{/* {usersMarkup} */}\n\t\t</Col>\n\t);\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}