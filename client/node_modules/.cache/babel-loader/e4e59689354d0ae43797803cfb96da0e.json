{"ast":null,"code":"var _jsxFileName = \"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { useMutation, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REGISTER_USER = gql`\n\tmutation register(\n\t\t$username: String!\n\t\t$email: String!\n\t\t$password: String!\n\t\t$confirmPassword: String!\n\t) {\n\t\tregister(\n\t\t\tusername: $username\n\t\t\temail: $email\n\t\t\tpassword: $password\n\t\t\tconfirmPassword: $confirmPassword\n\t\t) {\n\t\t\t_id\n\t\t\tusername\n\t\t\temail\n\t\t\tcreatedAt\n\t\t}\n\t}\n`;\nexport const Register = () => {\n  _s();\n\n  var _errors$email, _errors$confirmPasswo;\n\n  const [values, setValues] = useState({\n    email: '',\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [registerUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update: (_, res) => console.log(res),\n    onError: err => {\n      console.log(err.graphQLErrors[0].extensions.errors);\n      setErrors(err.graphQLErrors[0].extensions.errors);\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    registerUser({\n      variables: values\n    });\n  };\n\n  const {\n    email,\n    username,\n    password,\n    confirmPassword\n  } = values;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"authform bg-white py-5 justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 8,\n        md: 6,\n        lg: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: errors.email && 'text-danger',\n              children: (_errors$email = errors.email) !== null && _errors$email !== void 0 ? _errors$email : 'Email address'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              className: errors.email && 'is-invalid',\n              onChange: e => {\n                setValues({ ...values,\n                  email: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: errors.username && 'text-danger',\n              children: errors.username && 'Username'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: username,\n              className: errors.username && 'is-invalid',\n              onChange: e => {\n                setValues({ ...values,\n                  username: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: errors.password && 'text-danger',\n              children: errors.password && 'Password'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              className: errors.password && 'is-invalid',\n              onChange: e => {\n                setValues({ ...values,\n                  password: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: errors.confirmPassword && 'text-danger',\n              children: errors.confirmPassword && 'Confirm Password'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: confirmPassword,\n              className: (_errors$confirmPasswo = errors.confirmPassword) !== null && _errors$confirmPasswo !== void 0 ? _errors$confirmPasswo : 'is-invalid',\n              onChange: e => {\n                setValues({ ...values,\n                  confirmPassword: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              disabled: loading,\n              children: loading ? 'Loading...' : 'Register'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"+SmGc6jvNf/jLCJj/S98rdvOlBY=\", false, function () {\n  return [useMutation];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","Row","Col","Form","Button","useMutation","gql","REGISTER_USER","Register","values","setValues","email","username","password","confirmPassword","errors","setErrors","registerUser","loading","update","_","res","console","log","onError","err","graphQLErrors","extensions","handleSubmit","e","preventDefault","variables","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { useMutation, gql } from '@apollo/client';\n\nconst REGISTER_USER = gql`\n\tmutation register(\n\t\t$username: String!\n\t\t$email: String!\n\t\t$password: String!\n\t\t$confirmPassword: String!\n\t) {\n\t\tregister(\n\t\t\tusername: $username\n\t\t\temail: $email\n\t\t\tpassword: $password\n\t\t\tconfirmPassword: $confirmPassword\n\t\t) {\n\t\t\t_id\n\t\t\tusername\n\t\t\temail\n\t\t\tcreatedAt\n\t\t}\n\t}\n`;\nexport const Register = () => {\n\tconst [values, setValues] = useState({\n\t\temail: '',\n\t\tusername: '',\n\t\tpassword: '',\n\t\tconfirmPassword: '',\n\t});\n\tconst [errors, setErrors] = useState({});\n\n\tconst [registerUser, { loading }] = useMutation(REGISTER_USER, {\n\t\tupdate: (_, res) => console.log(res),\n\t\tonError: err => {\n\t\t\tconsole.log(err.graphQLErrors[0].extensions.errors);\n\t\t\tsetErrors(err.graphQLErrors[0].extensions.errors);\n\t\t},\n\t});\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tregisterUser({ variables: values });\n\t};\n\n\tconst { email, username, password, confirmPassword } = values;\n\treturn (\n\t\t<Fragment>\n\t\t\t<Row className='authform bg-white py-5 justify-content-center'>\n\t\t\t\t<Col sm={8} md={6} lg={4}>\n\t\t\t\t\t<h1 className='text-center'>Register</h1>\n\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className={errors.email && 'text-danger'}>\n\t\t\t\t\t\t\t\t{errors.email ?? 'Email address'}\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tclassName={errors.email && 'is-invalid'}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tsetValues({ ...values, email: e.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className={errors.username && 'text-danger'}>\n\t\t\t\t\t\t\t\t{errors.username && 'Username'}\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\tclassName={errors.username && 'is-invalid'}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tsetValues({ ...values, username: e.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className={errors.password && 'text-danger'}>\n\t\t\t\t\t\t\t\t{errors.password && 'Password'}\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tclassName={errors.password && 'is-invalid'}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tsetValues({ ...values, password: e.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className={errors.confirmPassword && 'text-danger'}>\n\t\t\t\t\t\t\t\t{errors.confirmPassword && 'Confirm Password'}\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\t\tclassName={errors.confirmPassword ?? 'is-invalid'}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tsetValues({ ...values, confirmPassword: e.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<div className='text-center'>\n\t\t\t\t\t\t\t<Button variant='success' type='submit' disabled={loading}>\n\t\t\t\t\t\t\t\t{loading ? 'Loading...' : 'Register'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Fragment>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}