{"ast":null,"code":"var _jsxFileName = \"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/context/messageContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageStateContext = /*#__PURE__*/createContext();\nconst MessageStateDispatch = /*#__PURE__*/createContext();\nlet users = null;\n\nconst messageReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USERS':\n      console.log('state', state);\n      return { ...state,\n        users: action.payload\n      };\n\n    default:\n      throw new Error(`Unknown action type:${action.type}`);\n  }\n};\n\nexport const MessageProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(messageReducer, {\n    users\n  });\n  return /*#__PURE__*/_jsxDEV(MessageStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(MessageStateDispatch.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MessageProvider, \"6uI/LM1J41qlyKuUx+aWl/pOHVk=\");\n\n_c = MessageProvider;\nexport const useMessageState = () => {\n  _s2();\n\n  return useContext(MessageStateContext);\n};\n\n_s2(useMessageState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const useMessageDispatch = () => {\n  _s3();\n\n  return useContext(MessageStateDispatch);\n};\n\n_s3(useMessageDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageProvider\");","map":{"version":3,"sources":["/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/context/messageContext.js"],"names":["React","createContext","useContext","useReducer","MessageStateContext","MessageStateDispatch","users","messageReducer","state","action","type","console","log","payload","Error","MessageProvider","children","dispatch","useMessageState","useMessageDispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;AAEA,MAAMC,mBAAmB,gBAAGH,aAAa,EAAzC;AAEA,MAAMI,oBAAoB,gBAAGJ,aAAa,EAA1C;AAEA,IAAIK,KAAK,GAAG,IAAZ;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACA,aAAO,EACN,GAAGA,KADG;AAENF,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAFR,OAAP;;AAID;AACC,YAAM,IAAIC,KAAJ,CAAW,uBAAsBL,MAAM,CAACC,IAAK,EAA7C,CAAN;AARF;AAUA,CAXD;;AAaA,OAAO,MAAMK,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChD,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBd,UAAU,CAACI,cAAD,EAAiB;AAAED,IAAAA;AAAF,GAAjB,CAApC;AAEA,sBACC,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEE,KAArC;AAAA,2BACC,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,MAAA,KAAK,EAAES,QAAtC;AAAA,gBACED;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAVM;;GAAMD,e;;KAAAA,e;AAYb,OAAO,MAAMG,eAAe,GAAG;AAAA;;AAAA,SAAMhB,UAAU,CAACE,mBAAD,CAAhB;AAAA,CAAxB;;IAAMc,e;;AACb,OAAO,MAAMC,kBAAkB,GAAG;AAAA;;AAAA,SAAMjB,UAAU,CAACG,oBAAD,CAAhB;AAAA,CAA3B;;IAAMc,kB","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nconst MessageStateContext = createContext();\n\nconst MessageStateDispatch = createContext();\n\nlet users = null;\n\nconst messageReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_USERS':\n\t\t\tconsole.log('state', state);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown action type:${action.type}`);\n\t}\n};\n\nexport const MessageProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(messageReducer, { users });\n\n\treturn (\n\t\t<MessageStateContext.Provider value={state}>\n\t\t\t<MessageStateDispatch.Provider value={dispatch}>\n\t\t\t\t{children}\n\t\t\t</MessageStateDispatch.Provider>\n\t\t</MessageStateContext.Provider>\n\t);\n};\n\nexport const useMessageState = () => useContext(MessageStateContext);\nexport const useMessageDispatch = () => useContext(MessageStateDispatch);\n"]},"metadata":{},"sourceType":"module"}