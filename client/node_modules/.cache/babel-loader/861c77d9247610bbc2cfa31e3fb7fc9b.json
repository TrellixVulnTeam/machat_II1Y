{"ast":null,"code":"var _jsxFileName = \"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/App.js\";\nimport './App.scss';\nimport { Container } from 'react-bootstrap';\nimport { Register } from './components/auth/Register';\nimport { Login } from './components/auth/Login';\nimport { ApolloClient, InMemoryCache, createHttpLink, ApolloProvider, split } from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport { AuthProvider } from './context/authContext';\nimport { MessageProvider } from './context/messageContext';\nimport DynamicRoutes from './DynamicRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('token'); // return the headers to the context so httpLink can read them\n\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst wsLink = new WebSocketLink({\n  uri: 'ws://localhost:4000/graphql',\n  options: {\n    reconnect: true,\n    connectionParams: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  }\n});\nconst splitLink = split(({\n  query\n}) => {\n  const definition = getMainDefinition(query);\n  return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n}, wsLink, httpLink);\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(MessageProvider, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"pt-5\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(DynamicRoutes, {\n                exact: true,\n                path: \"/register\",\n                component: Register,\n                guest: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(DynamicRoutes, {\n                exact: true,\n                path: \"/login\",\n                component: Login,\n                guest: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(DynamicRoutes, {\n                exact: true,\n                path: \"/\",\n                component: Home,\n                authenticated: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/App.js"],"names":["Container","Register","Login","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","split","WebSocketLink","getMainDefinition","setContext","BrowserRouter","Router","Route","Switch","Home","AuthProvider","MessageProvider","DynamicRoutes","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","wsLink","options","reconnect","connectionParams","Authorization","splitLink","query","definition","kind","operation","client","link","concat","cache","App"],"mappings":"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","sourcesContent":["import './App.scss';\nimport { Container } from 'react-bootstrap';\nimport { Register } from './components/auth/Register';\nimport { Login } from './components/auth/Login';\nimport {\n\tApolloClient,\n\tInMemoryCache,\n\tcreateHttpLink,\n\tApolloProvider,\n\tsplit,\n} from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport { AuthProvider } from './context/authContext';\nimport { MessageProvider } from './context/messageContext';\nimport DynamicRoutes from './DynamicRoutes';\n\nconst httpLink = createHttpLink({\n\turi: 'http://localhost:4000',\n});\n\nconst authLink = setContext((_, { headers }) => {\n\t// get the authentication token from local storage if it exists\n\tconst token = localStorage.getItem('token');\n\t// return the headers to the context so httpLink can read them\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : '',\n\t\t},\n\t};\n});\n\nconst wsLink = new WebSocketLink({\n\turi: 'ws://localhost:4000/graphql',\n\toptions: {\n\t\treconnect: true,\n\t\tconnectionParams: {\n\t\t\tAuthorization: `Bearer ${localStorage.getItem('token')}`,\n\t\t},\n\t},\n});\n\nconst splitLink = split(\n\t({ query }) => {\n\t\tconst definition = getMainDefinition(query);\n\t\treturn (\n\t\t\tdefinition.kind === 'OperationDefinition' &&\n\t\t\tdefinition.operation === 'subscription'\n\t\t);\n\t},\n\twsLink,\n\thttpLink\n);\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<AuthProvider>\n\t\t\t\t<MessageProvider>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Container className='pt-5'>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<DynamicRoutes\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath='/register'\n\t\t\t\t\t\t\t\t\tcomponent={Register}\n\t\t\t\t\t\t\t\t\tguest\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<DynamicRoutes exact path='/login' component={Login} guest />\n\t\t\t\t\t\t\t\t<DynamicRoutes exact path='/' component={Home} authenticated />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Router>\n\t\t\t\t</MessageProvider>\n\t\t\t</AuthProvider>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}