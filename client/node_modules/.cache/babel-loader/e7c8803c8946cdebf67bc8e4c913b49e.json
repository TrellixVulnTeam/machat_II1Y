{"ast":null,"code":"var _jsxFileName = \"/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/context/messageContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useReducer, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageStateContext = /*#__PURE__*/createContext();\nconst MessageDispatchContext = /*#__PURE__*/createContext();\n\nconst messageReducer = (state, action) => {\n  let usersCopy, userIndex;\n  const {\n    username,\n    message,\n    messages\n  } = action.payload;\n\n  switch (action.type) {\n    case 'SET_USERS':\n      return { ...state,\n        users: action.payload\n      };\n\n    case 'SET_USER_MESSAGES':\n      usersCopy = [...state.users];\n      userIndex = usersCopy.findIndex(u => u.username === username);\n      usersCopy[userIndex] = { ...usersCopy[userIndex],\n        messages\n      };\n      return { ...state,\n        users: usersCopy\n      };\n\n    case 'SET_SELECTED_USER':\n      usersCopy = state.users.map(user => ({ ...user,\n        selected: user.username === action.payload\n      }));\n      return { ...state,\n        users: usersCopy\n      };\n\n    case 'ADD_MESSAGE':\n      usersCopy = [...state.users];\n      userIndex = usersCopy.findIndex(u => u.username === username);\n      let newUser = { ...usersCopy[userIndex],\n        messages: usersCopy[userIndex].messages ? [message, ...usersCopy[userIndex].messages] : null,\n        latestMessage: message\n      };\n      usersCopy[userIndex] = newUser;\n      return { ...state,\n        users: usersCopy\n      };\n\n    default:\n      throw new Error(`Unknown action type: ${action.type}`);\n  }\n};\n\nexport const MessageProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(messageReducer, {\n    users: null\n  });\n  return /*#__PURE__*/_jsxDEV(MessageDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(MessageStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MessageProvider, \"ufes000ZzALfkqtOxaL1o8RmdVY=\");\n\n_c = MessageProvider;\nexport const useMessageState = () => {\n  _s2();\n\n  return useContext(MessageStateContext);\n};\n\n_s2(useMessageState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const useMessageDispatch = () => {\n  _s3();\n\n  return useContext(MessageDispatchContext);\n};\n\n_s3(useMessageDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageProvider\");","map":{"version":3,"sources":["/Users/bensontamunoemi/Desktop/Web Projects/React-Applications/MaChat/client/src/context/messageContext.js"],"names":["React","createContext","useReducer","useContext","MessageStateContext","MessageDispatchContext","messageReducer","state","action","usersCopy","userIndex","username","message","messages","payload","type","users","findIndex","u","map","user","selected","newUser","latestMessage","Error","MessageProvider","children","dispatch","useMessageState","useMessageDispatch"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n\nconst MessageStateContext = createContext();\nconst MessageDispatchContext = createContext();\n\nconst messageReducer = (state, action) => {\n\tlet usersCopy, userIndex;\n\tconst { username, message, messages } = action.payload;\n\tswitch (action.type) {\n\t\tcase 'SET_USERS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: action.payload,\n\t\t\t};\n\t\tcase 'SET_USER_MESSAGES':\n\t\t\tusersCopy = [...state.users];\n\n\t\t\tuserIndex = usersCopy.findIndex(u => u.username === username);\n\n\t\t\tusersCopy[userIndex] = { ...usersCopy[userIndex], messages };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: usersCopy,\n\t\t\t};\n\t\tcase 'SET_SELECTED_USER':\n\t\t\tusersCopy = state.users.map(user => ({\n\t\t\t\t...user,\n\t\t\t\tselected: user.username === action.payload,\n\t\t\t}));\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: usersCopy,\n\t\t\t};\n\t\tcase 'ADD_MESSAGE':\n\t\t\tusersCopy = [...state.users];\n\n\t\t\tuserIndex = usersCopy.findIndex(u => u.username === username);\n\n\t\t\tlet newUser = {\n\t\t\t\t...usersCopy[userIndex],\n\t\t\t\tmessages: usersCopy[userIndex].messages\n\t\t\t\t\t? [message, ...usersCopy[userIndex].messages]\n\t\t\t\t\t: null,\n\t\t\t\tlatestMessage: message,\n\t\t\t};\n\n\t\t\tusersCopy[userIndex] = newUser;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: usersCopy,\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown action type: ${action.type}`);\n\t}\n};\n\nexport const MessageProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(messageReducer, { users: null });\n\n\treturn (\n\t\t<MessageDispatchContext.Provider value={dispatch}>\n\t\t\t<MessageStateContext.Provider value={state}>\n\t\t\t\t{children}\n\t\t\t</MessageStateContext.Provider>\n\t\t</MessageDispatchContext.Provider>\n\t);\n};\n\nexport const useMessageState = () => useContext(MessageStateContext);\nexport const useMessageDispatch = () => useContext(MessageDispatchContext);\n"]},"metadata":{},"sourceType":"module"}